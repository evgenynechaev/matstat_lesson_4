from statistics import NormalDist


def task_1():
    """
    Задача 1:
        Случайная непрерывная величина A имеет равномерное распределение на промежутке (200, 800].
        Найдите ее среднее значение и дисперсию.
    Решение:
        Среднее значение (800 + 200) / 2 = 500
        Дисперсия: ((800 - 200) ** 2) / 12 = 30000
    Ответ:
        Среднее значение: 500
        Дисперсия: 30000
    """
    a = 200
    b = 800
    mx = (a + b) / 2
    dx = ((b - a) ** 2) / 12
    print("Задача 1")
    print(f"    Среднее значение: {mx}")
    print(f"    Дисперсия: {dx}")
    print()


def task_2():
    """
    Задача 2:
        О случайной непрерывной равномерно распределенной величине B известно, что ее дисперсия равна 0.2.
        Можно ли найти правую границу величины B и ее среднее значение зная, что левая граница равна 0.5?
        Если да, найдите ее.
    Решение:
        Формула дисперсии D = (b - a)**2 / 12
        D = 0.2
        a = 0.5
        0.2 = (b - 0.5)**2 / 12
        находим b:
        b = 0.5 + (12 * D)**0.5 = 2.049
        среднее значение:
        (a + b) / 2 = (0.5 + 2.049) / 2 = 1.2746
    Ответ:
        Правая граница величины B: 2.049
        Среднее значение величины B: 1.2746
    """
    print("Задача 2")
    disperse = 0.2
    a = 0.5
    b = 0.5 + (12 * disperse)**0.5
    mx = (a + b) / 2
    print(f"    Правая граница величины B: {b:.4f}")
    print(f"    Среднее значение величины B: {mx:.4f}")
    print()


def task_3():
    """
    Задача 3:
        Непрерывная случайная величина X распределена нормально и задана плотностью распределения
        f(x) = (1 / (4 * sqrt(2*pi))) * (exp(-(x+2)**2) / 32).
        Найдите:
        а). M(X)
        б). D(X)
        в). std(X) (среднее квадратичное отклонение)
    Решение:
        Исходя из формулы плотности распределения:
        сигма = 4
        M(X) = -2
        D(X) = 4 ** 2 = 16
        проверка:
        2 * сигма**2 = 2 * 4**2 = 2 * 16 = 32
    Ответ:
        а). M(X) = -2
        б). D(X) = 16
        в). std(X) (среднее квадратичное отклонение) = D(X) ** 0.5 = 4
    """
    print("Задача 3")
    print(f"    M(X) = -2")
    print(f"    D(X) = 16")
    print(f"    std(X) = 4")
    print()


def task_4_calc(x: int, mu: int, sigma: float):
    """
    Расчет для задачи 4
    """
    z = float(x - mu) / sigma
    return z


def task_4():
    """
    Задача 4:
        Рост взрослого населения города X имеет нормальное распределение.
        Причем, средний рост равен 174 см, а среднее квадратичное отклонение равно 8 см.
        Какова вероятность того, что случайным образом выбранный взрослый человек имеет рост:
        а). больше 182 см
        б). больше 190 см
        в). от 166 см до 190 см
        г). от 166 см до 182 см
        д). от 158 см до 190 см
        е). не выше 150 см или не ниже 190 см
        ё). не выше 150 см или не ниже 198 см
        ж). ниже 166 см.
    Решение:
        Рост взрослого населения следует нормальному распределению
        средний рост  = M(X) = mu = 174
        среднее квадратичное отклонение sigma = 8
        Приведем величины к нормальному виду:
        Z = (x - 174) / 8
        Какова вероятность того, что случайным образом выбранный взрослый человек имеет рост:
        а). x > 182:  Z = (182 - 174) / 8 = 1
            по таблице N(z) = 0.8413 т.к. больше 182, то: P = 1 - 0.8413 = 0.1587
            Ответ: Pа = 0.1587

        б). x > 190:  Z = (190 - 174) / 8 = 2
            по таблице N(z) = 0.9772 т.к. больше 190, то: P = 1 - 0.9772 = 0.0228
            Ответ: Pб = 0.0228

        в). 166 > x > 190:  Z1 = (166 - 174) / 8 = -1, Z2 = (190 - 174) / 8 = 2
            по таблице N(z1) = 0.1587, N(z2) = 0.9772, P = N(z2) - N(z1) = 0.8186
            Ответ: Pв = 0.8186

        г). 166 > x > 182:  Z1 = (166 - 174) / 8 = -1, Z2 = (182 - 174) / 8 = 1
            по таблице N(z1) = 0.1587, N(z2) = 0.8413, P = N(z2) - N(z1) = 0.6827
            Ответ: Pг = 0.6827

        д). 158 > x > 190:  Z1 = (158 - 174) / 8 = -2, Z2 = (190 - 174) / 8 = 2
            по таблице N(z1) = 0.0228, N(z2) = 0.9772, P = N(z2) - N(z1) = 0.9545
            Ответ: Pд = 0.9545

        е). x < 150 & x > 190:  Z1 = (150 - 174) / 8 = -3, Z2 = (190 - 174) / 8 = 2
            по таблице N(z1) = 0.0013, N(z2) = 0.9772, P = N(z1) + 1 - N(z2) = 0.0241
            Ответ: Pе = 0.0241

        ё). x < 150 & x > 198:  Z1 = (150 - 174) / 8 = -3, Z2 = (198 - 174) / 8 = 3
            по таблице N(z1) = 0.0013, N(z2) = 0.9987, P = N(z1) + 1 - N(z2) = 0.0027
            Ответ: Pё = 0.0027

        ж). x < 166:  Z = (166 - 174) / 8 = -1
            по таблице N(z) = 0.1587
            Ответ: Pж = 0.1587
    """
    print("Задача 4")
    print(f"    Какова вероятность того, что случайным образом выбранный взрослый человек имеет рост:")
    mu = 174
    sigma = 8
    nd = NormalDist(mu=0, sigma=1)

    # > 182
    x_a = 182
    z_a = task_4_calc(x=x_a, mu=mu, sigma=sigma)
    nd_a = nd.cdf(z_a)
    p_a = 1 - nd_a
    print(f"    а). больше {x_a} см.")
    print(f"        Z = {z_a:.4f}, nd = {nd_a:.4f}, P = {p_a:.4f}.")
    print(f"        Ответ: Pа = {p_a:.4f}")
    print()

    # > 190
    x_b = 190
    z_b = task_4_calc(x=x_b, mu=mu, sigma=sigma)
    nd_b = nd.cdf(z_b)
    p_b = 1 - nd_b
    print(f"    б). больше {x_b} см.")
    print(f"        Z = {z_b:.4f}, nd = {nd_b:.4f}, P = {p_b:.4f}")
    print(f"        Ответ: Pб = {p_b:.4f}")
    print()

    # 166 <-> 190
    x_c_1 = 166
    x_c_2 = 190
    z_c_1 = task_4_calc(x=x_c_1, mu=mu, sigma=sigma)
    z_c_2 = task_4_calc(x=x_c_2, mu=mu, sigma=sigma)
    nd_c_1 = nd.cdf(z_c_1)
    nd_c_2 = nd.cdf(z_c_2)
    p_c = nd_c_2 - nd_c_1
    print(f"    в). от {x_c_1} см до {x_c_2} см.")
    print(f"        Z_1 = {z_c_1:.4f}, Z_2 = {z_c_2:.4f}, "
          f"nd_1 = {nd_c_1:.4f}, nd_2 = {nd_c_2:.4f}, "
          f"P = {p_c:.4f}")
    print(f"        Ответ: Pв = {p_c:.4f}")
    print()

    # 166 <-> 182
    x_d_1 = 166
    x_d_2 = 182
    z_d_1 = task_4_calc(x=x_d_1, mu=mu, sigma=sigma)
    z_d_2 = task_4_calc(x=x_d_2, mu=mu, sigma=sigma)
    nd_d_1 = nd.cdf(z_d_1)
    nd_d_2 = nd.cdf(z_d_2)
    p_d = nd_d_2 - nd_d_1
    print(f"    г). от {x_d_1} см до {x_d_2} см.")
    print(f"        Z_1 = {z_d_1:.4f}, Z_2 = {z_d_2:.4f}, "
          f"nd_1 = {nd_d_1:.4f}, nd_2 = {nd_d_2:.4f}, "
          f"P = {p_d:.4f}")
    print(f"        Ответ: Pг = {p_d:.4f}")
    print()

    # 158 <-> 190
    x_e_1 = 158
    x_e_2 = 190
    z_e_1 = task_4_calc(x=x_e_1, mu=mu, sigma=sigma)
    z_e_2 = task_4_calc(x=x_e_2, mu=mu, sigma=sigma)
    nd_e_1 = nd.cdf(z_e_1)
    nd_e_2 = nd.cdf(z_e_2)
    p_e = nd_e_2 - nd_e_1
    print(f"    д). от {x_e_1} см до {x_e_2} см.")
    print(f"        Z_1 = {z_e_1:.4f}, Z_2 = {z_e_2:.4f}, "
          f"nd_1 = {nd_e_1:.4f}, nd_2 = {nd_e_2:.4f}, "
          f"P = {p_e:.4f}")
    print(f"        Ответ: Pд = {p_e:.4f}")
    print()

    # -> 150 190 <-
    x_f_1 = 150
    x_f_2 = 190
    z_f_1 = task_4_calc(x=x_f_1, mu=mu, sigma=sigma)
    z_f_2 = task_4_calc(x=x_f_2, mu=mu, sigma=sigma)
    nd_f_1 = nd.cdf(z_f_1)
    nd_f_2 = nd.cdf(z_f_2)
    p_f = nd_f_1 + 1 - nd_f_2
    print(f"    е). не выше {x_f_1} см или не ниже {x_f_2} см.")
    print(f"        Z_1 = {z_f_1:.4f}, Z_2 = {z_f_2:.4f}, "
          f"nd_1 = {nd_f_1:.4f}, nd_2 = {nd_f_2:.4f}, "
          f"P = {p_f:.4f}")
    print(f"        Ответ: Pе = {p_f:.4f}")
    print()

    # -> 150 198 <-
    x_g_1 = 150
    x_g_2 = 198
    z_g_1 = task_4_calc(x=x_g_1, mu=mu, sigma=sigma)
    z_g_2 = task_4_calc(x=x_g_2, mu=mu, sigma=sigma)
    nd_g_1 = nd.cdf(z_g_1)
    nd_g_2 = nd.cdf(z_g_2)
    p_g = nd_g_1 + 1 - nd_g_2
    print(f"    ё). не выше {x_g_1} см или не ниже {x_g_2} см.")
    print(f"        Z = {z_g_1:.4f}, Z_2 = {z_g_2:.4f}, "
          f"nd_1 = {nd_g_1:.4f}, nd_2 = {nd_g_2:.4f}, "
          f"P = {p_g:.4f}")
    print(f"        Ответ: Pё = {p_g:.4f}")
    print()


    # < 166
    x_h = 166
    z_h = task_4_calc(x=x_h, mu=mu, sigma=sigma)
    p_h = nd.cdf(z_h)
    print(f"    ж). ниже {x_h} см.")
    print(f"        Z = {z_h:.4f}, "
          f"P = {p_h:.4f}")
    print(f"        Ответ: Pж = {p_h:.4f}")
    print()


def task_5():
    """
    Задача 5:
        На сколько сигм (средних квадратичных отклонений) отклоняется рост человека, равный 190 см, от
        математического ожидания роста в популяции, в которой M(X) = 178 см и D(X) = 25 кв.см?
    Решение:
        Рост = 190 см
        M(X) = 178 см
        D(X) = 25 кв.см
        sigma = D(X) ** 0.5 = 5 см
        Вычисляем Z = (Рост - M(X)) / sigma = (190 - 178) / 5 = 2.4
    Ответ: рост человека, равный 190 см отклоняется от математического ожидания роста в популяции на 2.4 сигм.
    """
    print("Задача 5")
    x = 190
    mu = 178
    d_x = 25
    sigma = d_x ** 0.5
    z = float(x - mu) / sigma
    print(f"    Z = ({x} - {mu}) / {sigma} = {z}")
    print(f"    Ответ: рост человека, равный {x} см отклоняется от "
          f"математического ожидания роста в популяции на {z} сигм.")
    print()


task_1()
task_2()
task_3()
task_4()
task_5()
